<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Qu·∫£n l√Ω ng∆∞·ªùi d√πng</title>
    <link rel="stylesheet" href="/css/admin/user.css">
    <link href="https://fonts.googleapis.com/css2?family=Kodchasan:wght@300;400;700&display=swap" rel="stylesheet">
</head>
<body>
    <div class="sidebar">
        <h2>Admin Panel</h2>
        <ul>
            <li><a href="/admin/dashboard">üìä Dashboard</a></li>
            <li><a href="/admin/orders?page=1&pageSize=10">üìÖ Qu·∫£n l√Ω ƒë∆°n h√†ng</a></li>
            <li><a href="/admin/services?page=1&pageSize=10">üõ† Qu·∫£n l√Ω d·ªãch v·ª•</a></li>
            <li><a href="/admin/user?page=1&pageSize=10">üë• Qu·∫£n l√Ω ng∆∞·ªùi d√πng</a></li>
            <li><a href="/admin/categories?page=1&pageSize=10">üìÇ Qu·∫£n l√Ω danh m·ª•c</a></li>
            <li><a href="/admin/employees?page=1&pageSize=10">üë®‚Äçüîß Qu·∫£n l√Ω nh√¢n vi√™n</a></li>
            <li><a href="/admin/coupons?page=1&pageSize=10">üè∑ Qu·∫£n l√Ω m√£ khuy·∫øn m√£i</a></li>
            <li><a href="/admin/bills?page=1&pageSize=10">üíµ Qu·∫£n l√Ω h√≥a ƒë∆°n</a></li>
            <li><a href="/admin/feedback?page=1&pageSize=10">‚≠ê Qu·∫£n l√Ω ƒë√°nh gi√°</a></li>
          </ul>
    </div>
    <div class="content">
        <h1>Qu·∫£n l√Ω ng∆∞·ªùi d√πng</h1>
        <form method="get" style="display:inline;" id="pageSizeForm">
            <input type="hidden" name="page" value="<%= page %>">
            <input type="hidden" name="token" value="<%= token %>">
            <label for="pageSize">S·ªë d√≤ng/trang:</label>
            <input type="number" name="pageSize" id="pageSize" min="1" max="100" value="<%= pageSize %>" style="width:60px;">
        </form>
        <div class="table-container">
            <table>
                <thead>
                    <tr>
                        <th>ID Ng∆∞·ªùi D√πng</th>
                        <th>T√™n</th>
                        <th>T√™n ƒêƒÉng Nh·∫≠p</th>
                        <th>M·∫≠t Kh·∫©u</th>
                        <th>ƒê·ªãa Ch·ªâ</th>
                        <th>S·ªë ƒêi·ªán Tho·∫°i</th>
                        <th>Email</th>
                        <th>Avatar</th>
                    </tr>
                </thead>
                <tbody>
                    <% users.forEach(user => { %>
                        <tr>
                            <td><%= user.id %></td>
                            <td><%= user.name %></td>
                            <td><%= user.username %></td>
                            <td><%= user.password %></td>
                            <td><%= user.address %></td>
                            <td><%= user.phone %></td>
                            <td><%= user.email %></td>
                            <td><a href="<%= user.avatar_url %>" target="_blank">Xem ·∫£nh</a></td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>
        <div class="pagination">
            <% if (page > 1) { %>
                <a href="?page=<%= page - 1 %>&pageSize=<%= pageSize %>&token=<%= token %>">Trang tr∆∞·ªõc</a>
            <% } %>
            <span>Trang <%= page %> / <%= totalPages %></span>
            <% if (page < totalPages) { %>
                <a href="?page=<%= page + 1 %>&pageSize=<%= pageSize %>&token=<%= token %>">Trang sau</a>
            <% } %>
        </div>
        <button class="btn-add">Th√™m Ng∆∞·ªùi D√πng</button>

        <!-- Modal th√™m ng∆∞·ªùi d√πng -->
       <div id="addUserModal" class="modal">
            <div class="modal-content">
                <div class="modal-header">
                    <h2>Th√™m Ng∆∞·ªùi D√πng</h2>
                    <span class="close" onclick="closeModal()">&times;</span>
                </div>
                <form id="addUserForm" onsubmit="addUser(event)" enctype="multipart/form-data">
                    <div class="form-group">
                        <label for="name">T√™n ng∆∞·ªùi d√πng:</label>
                        <input type="text" id="name" name="name" placeholder="Nh·∫≠p t√™n ng∆∞·ªùi d√πng" required>
                    </div>
                    <div class="form-group">
                        <label for="username">T√™n ƒëƒÉng nh·∫≠p:</label>
                        <input type="text" id="username" name="username" placeholder="Nh·∫≠p t√™n ƒëƒÉng nh·∫≠p" required>
                    </div>
                    <div class="form-group">
                        <label for="password">M·∫≠t kh·∫©u:</label>
                        <input type="password" id="password" name="password" placeholder="Nh·∫≠p m·∫≠t kh·∫©u" required>
                    </div>
                    <div class="form-group">
                        <label for="address">ƒê·ªãa ch·ªâ:</label>
                        <input type="text" id="address" name="address" placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ">
                    </div>
                    <div class="form-group">
                        <label for="phone">S·ªë ƒëi·ªán tho·∫°i:</label>
                        <input type="text" id="phone" name="phone" placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i">
                    </div>
                    <div class="form-group">
                        <label for="email">Email:</label>
                        <input type="email" id="email" name="email" placeholder="Nh·∫≠p email" required>
                    </div>
                    <div class="form-group">
                        <label for="avatar">·∫¢nh ƒë·∫°i di·ªán:</label>
                        <input type="file" id="avatar" name="avatar" accept="image/*">
                    </div>
                    <div class="form-actions">
                        <button type="submit" class="btn btn-save">L∆∞u</button>
                        <button type="button" class="btn btn-cancel" onclick="closeModal()">H·ªßy</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        const modal = document.getElementById("addUserModal");
        const btnAdd = document.querySelector(".btn-add");

        btnAdd.addEventListener("click", () => {
            modal.style.display = "flex";
        });

        function closeModal() {
            modal.style.display = "none";
            document.getElementById("addUserForm").reset();
        }

        window.onclick = function (event) {
            if (event.target === modal) {
                closeModal();
            }
        };

        async function uploadAvatar(file) {
            const formData = new FormData();
            formData.append('image', file);

            const response = await fetch('/api/upload', {
                method: 'POST',
                body: formData,
            });

            if (!response.ok) {
                throw new Error('L·ªói khi t·∫£i ·∫£nh l√™n');
            }

            const data = await response.json();
            return data.imageUrl; // Tr·∫£ v·ªÅ URL ·∫£nh
        }

        async function addUser(event) {
            event.preventDefault();
            const form = event.target;
            const formData = new FormData(form);

            try {
                // Upload ·∫£nh tr∆∞·ªõc
                const avatarFile = formData.get('avatar');
                const avatarUrl = await uploadAvatar(avatarFile);

                // G·ª≠i th√¥ng tin ng∆∞·ªùi d√πng c√πng URL ·∫£nh
                const userData = {
                    name: formData.get('name'),
                    username: formData.get('username'),
                    password: formData.get('password'),
                    address: formData.get('address'),
                    phone: formData.get('phone'),
                    email: formData.get('email'),
                    avatar_url: avatarUrl, // URL ·∫£nh t·ª´ API upload
                };

                const response = await fetch('/admin/users/add', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(userData),
                });

                if (response.ok) {
                    alert('Th√™m ng∆∞·ªùi d√πng th√†nh c√¥ng!');
                    closeModal();
                    location.reload(); // Reload l·∫°i trang
                } else {
                    alert('L·ªói khi th√™m ng∆∞·ªùi d√πng');
                }
            } catch (error) {
                console.error('L·ªói:', error);
            }
        }

        // T·ª± ƒë·ªông submit khi thay ƒë·ªïi gi√° tr·ªã
        document.getElementById('pageSize').addEventListener('change', function() {
            document.getElementById('pageSizeForm').submit();
        });
        // Ho·∫∑c submit khi nh·∫•n Enter
        document.getElementById('pageSize').addEventListener('keydown', function(e) {
            if (e.key === 'Enter') document.getElementById('pageSizeForm').submit();
        });

        (function() {
            function getToken() {
                const params = new URLSearchParams(window.location.search);
                return params.get('token');
            }
            let token = getToken();
            if (!token) {
                token = localStorage.getItem('token');
                if (token) {
                    const params = new URLSearchParams(window.location.search);
                    params.set('token', token);
                    window.location.search = params.toString();
                    return;
                } else {
                    alert('B·∫°n ch∆∞a ƒëƒÉng nh·∫≠p ho·∫∑c phi√™n ƒëƒÉng nh·∫≠p ƒë√£ h·∫øt h·∫°n!');
                    window.location.href = '/login';
                    return;
                }
            }
            // S·ª≠a t·∫•t c·∫£ c√°c link trong sidebar ƒë·ªÉ gi·ªØ token
            document.querySelectorAll('.sidebar a').forEach(link => {
                if (link.href && link.href.startsWith(window.location.origin + '/admin/')) {
                    const url = new URL(link.href);
                    url.searchParams.set('token', token);
                    link.href = url.pathname + url.search;
                }
            });
            // S·ª≠a t·∫•t c·∫£ c√°c link ph√¢n trang ƒë·ªÉ gi·ªØ token
            document.querySelectorAll('.pagination a').forEach(link => {
                const url = new URL(link.href, window.location.origin);
                url.searchParams.set('token', token);
                link.href = url.pathname + url.search;
            });
        })();
    </script>
</body>
</html>