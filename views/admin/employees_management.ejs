<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Qu·∫£n l√Ω Nh√¢n vi√™n</title>
  <link rel="stylesheet" href="/css/admin/services_management.css" />
  <link href="https://fonts.googleapis.com/css2?family=Kodchasan:wght@300;400;700&display=swap" rel="stylesheet" />
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
  <style>
    .container {
        flex: 1;
        padding: 30px 20px 30px 296px;
        background: white;
    }
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0,0,0,0.5);
      justify-content: center;
      align-items: center;
    }
    .modal-content {
      background-color: white;
      padding: 20px;
      border-radius: 5px;
      width: 400px;
      max-height: 80vh;
      overflow-y: auto;
    }
    .form-group {
      margin-bottom: 15px;
    }
    .form-group label {
      display: block;
      margin-bottom: 5px;
    }
    .form-group input, .form-group select {
      width: 100%;
      padding: 8px;
      border: 1px solid #ddd;
      border-radius: 4px;
    }
    .btn-group {
      display: flex;
      justify-content: flex-end;
      gap: 10px;
      margin-top: 20px;
    }
    .image-preview {
      max-width: 200px;
      margin-top: 10px;
    }
  </style>
</head>
<body>
  <div class="sidebar">
        <h2>Admin Panel</h2>
        <ul>
            <li><a href="/admin/dashboard">üìä Dashboard</a></li>
            <li><a href="/admin/orders?page=1&pageSize=10">üìÖ Qu·∫£n l√Ω ƒë∆°n h√†ng</a></li>
            <li><a href="/admin/services?page=1&pageSize=10">üõ† Qu·∫£n l√Ω d·ªãch v·ª•</a></li>
            <li><a href="/admin/user?page=1&pageSize=10">üë• Qu·∫£n l√Ω ng∆∞·ªùi d√πng</a></li>
            <li><a href="/admin/categories?page=1&pageSize=10">üìÇ Qu·∫£n l√Ω danh m·ª•c</a></li>
            <li><a href="/admin/employees?page=1&pageSize=10">üë®‚Äçüîß Qu·∫£n l√Ω nh√¢n vi√™n</a></li>
            <li><a href="/admin/coupons?page=1&pageSize=10">üè∑ Qu·∫£n l√Ω m√£ khuy·∫øn m√£i</a></li>
            <li><a href="/admin/bills?page=1&pageSize=10">üíµ Qu·∫£n l√Ω h√≥a ƒë∆°n</a></li>
            <li><a href="/admin/feedback?page=1&pageSize=10">‚≠ê Qu·∫£n l√Ω ƒë√°nh gi√°</a></li>
            <li>
                <form action="/logout" method="POST" style="margin: 0;">
                <button type="submit" class="logout-btn">
                    <i class="fas fa-sign-out-alt"></i> ƒêƒÉng xu·∫•t
                </button>
                </form>
            </li>
        </ul>
    </div>
  <div class="container">
    <h1>Qu·∫£n l√Ω nh√¢n vi√™n</h1>
    <form method="get" style="display:inline;" id="pageSizeForm">
      <input type="hidden" name="page" value="<%= page %>">
      <input type="hidden" name="token" value="<%= token %>">
      <label for="pageSize">S·ªë d√≤ng/trang:</label>
      <input type="number" name="pageSize" id="pageSize" min="1" max="100" value="<%= pageSize %>" style="width:60px;">
    </form>
    <table>
      <tr>
        <th>ID</th>
        <th>T√™n</th>
        <th>Kinh nghi·ªám</th>
        <th>D·ªãch v·ª•</th>
        <th>·∫¢nh ƒë·∫°i di·ªán</th>
        <th>Username</th>
        <th>Password</th>
        <th>Phone</th>
        <th>Email</th>
        <th>ƒê·ªãa ch·ªâ</th>
        <th>H√†nh ƒë·ªông</th>
      </tr>
      <% employees.forEach(emp => { %>
        <tr>
          <td><%= emp.id %></td>
          <td><%= emp.name %></td>
          <td><%= emp.experience %> nƒÉm</td>
          <td><%= emp.service_name %></td>
          <td>
            <% if (emp.profile_image_url) { %>
              <a href="<%= emp.profile_image_url %>" target="_blank" style="text-decoration: none;">Xem ·∫£nh</a>
            <% } %>
          </td>
          <td><%= emp.username %></td>
          <td><%= emp.password %></td>
          <td><%= emp.phone %></td>
          <td><%= emp.email %></td>
          <td><%= emp.address %></td>
          <td>
            <button class="btn btn-delete" onclick="deleteEmployee('<%= emp.id %>')">X√≥a</button>
          </td>
        </tr>
      <% }) %>
    </table>
    <button class="btn-add" onclick="openAddModal()">Th√™m nh√¢n vi√™n</button>
    <div class="pagination">
      <% if (page > 1) { %>
        <a href="?page=<%= page - 1 %>&pageSize=<%= pageSize %>&token=<%= token %>" style="text-decoration: none;">Trang tr∆∞·ªõc</a>
      <% } %>
      <span>Trang <%= page %> / <%= totalPages %></span>
      <% if (page < totalPages) { %>
        <a href="?page=<%= page + 1 %>&pageSize=<%= pageSize %>&token=<%= token %>" style="text-decoration: none;">Trang sau</a>
      <% } %>
    </div>

    <!-- Modal th√™m nh√¢n vi√™n -->
    <div id="addEmployeeModal" class="modal">
      <div class="modal-content">
        <h2>Th√™m Nh√¢n Vi√™n</h2>
        <form id="addEmployeeForm">
          <div class="form-group">
            <label>T√™n:</label>
            <input type="text" name="name" required>
          </div>
          <div class="form-group">
            <label>Kinh nghi·ªám (nƒÉm):</label>
            <input type="number" name="experience" min="0" required>
          </div>
          <div class="form-group">
            <label>D·ªãch v·ª•:</label>
            <select name="Serviceid" required>
              <option value="">--Ch·ªçn d·ªãch v·ª•--</option>
              <% services.forEach(s => { %>
                <option value="<%= s.id %>"><%= s.name %></option>
              <% }) %>
            </select>
          </div>
          <div class="form-group">
            <label>·∫¢nh ƒë·∫°i di·ªán:</label>
            <input type="file" id="profileImage" name="profile_image" accept="image/*" required>
            <img id="addImagePreview" class="image-preview" style="display: none;">
          </div>
          <div class="form-group">
            <label>Username:</label>
            <input type="text" name="username" required>
          </div>
          <div class="form-group">
            <label>Password:</label>
            <input type="password" name="password" required>
          </div>
          <div class="form-group">
            <label>Phone:</label>
            <input type="text" name="phone">
          </div>
          <div class="form-group">
            <label>Email:</label>
            <input type="email" name="email">
          </div>
          <div class="form-group">
            <label>ƒê·ªãa ch·ªâ:</label>
            <input type="text" name="address">
          </div>
          <div class="btn-group">
            <button type="submit" class="btn">L∆∞u</button>
            <button type="button" class="btn btn-cancel" onclick="closeModal('addEmployeeModal')">H·ªßy</button>
          </div>
        </form>
      </div>
    </div>

    <!-- Modal s·ª≠a nh√¢n vi√™n -->
    <div id="editEmployeeModal" class="modal">
      <div class="modal-content">
        <h2>S·ª≠a Nh√¢n Vi√™n</h2>
        <form id="editEmployeeForm">
          <input type="hidden" id="editEmployeeId">
          <div class="form-group">
            <label>T√™n:</label>
            <input type="text" id="editName" required>
          </div>

          <div class="form-group">
            <label>Kinh nghi·ªám (nƒÉm):</label>
            <input type="number" id="editExperience" min="0" required>
          </div>

          <div class="form-group">
            <label>D·ªãch v·ª•:</label>
            <select id="editServiceId" required>
              <option value="">--Ch·ªçn d·ªãch v·ª•--</option>
              <% services.forEach(s => { %>
                <option value="<%= s.id %>"><%= s.name %></option>
              <% }) %>
            </select>
          </div>

          <div class="form-group">
            <label>·∫¢nh ƒë·∫°i di·ªán:</label>
            <input type="file" id="editProfileImage" accept="image/*">
            <img id="editImagePreview" class="image-preview">
          </div>

          <div class="btn-group">
            <button type="submit" class="btn">L∆∞u</button>
            <button type="button" class="btn btn-cancel" onclick="closeModal('editEmployeeModal')">H·ªßy</button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <script>
    // M·ªü modal th√™m m·ªõi
    function openAddModal() {
      document.getElementById('addEmployeeModal').style.display = 'flex';
    }

    // ƒê√≥ng modal
    function closeModal(modalId) {
      document.getElementById(modalId).style.display = 'none';
      if (modalId === 'addEmployeeModal') {
        document.getElementById('addEmployeeForm').reset();
        document.getElementById('addImagePreview').style.display = 'none';
      }
    }

    // M·ªü modal s·ª≠a
    function editEmployee(id, name, experience, serviceId, imageUrl) {
      document.getElementById('editEmployeeId').value = id;
      document.getElementById('editName').value = name;
      document.getElementById('editExperience').value = experience;
      document.getElementById('editServiceId').value = serviceId;
      document.getElementById('editImagePreview').src = imageUrl;
      document.getElementById('editEmployeeModal').style.display = 'flex';
    }

    //X·ª≠ l√Ω submit form th√™m m·ªõi
    document.getElementById('addEmployeeForm').addEventListener('submit', async function(e) {
      e.preventDefault();
      const form = e.target;
      const imageFile = form.profile_image.files[0];

      let imageUrl = '';
      if (imageFile) {
        // Upload ·∫£nh tr∆∞·ªõc
        const imageForm = new FormData();
        imageForm.append('image', imageFile);
        const uploadRes = await fetch('/api/upload', {
          method: 'POST',
          body: imageForm
        });
        if (!uploadRes.ok) {
          alert('L·ªói khi upload ·∫£nh');
          return;
        }
        const uploadData = await uploadRes.json();
        imageUrl = uploadData.imageUrl;
      }

      // L·∫•y d·ªØ li·ªáu c√°c tr∆∞·ªùng kh√°c
      const employeeData = {
        name: form.name.value,
        experience: form.experience.value,
        Serviceid: form.Serviceid.value,
        profile_image_url: imageUrl,
        username: form.username.value,
        password: form.password.value,
        phone: form.phone.value,
        email: form.email.value,
        address: form.address.value
      };

      // G·ª≠i d·ªØ li·ªáu nh√¢n vi√™n l√™n server
      const response = await fetch('/admin/employees/add', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(employeeData)
      });

      if (response.ok) {
        alert('Th√™m nh√¢n vi√™n th√†nh c√¥ng!');
        window.location.reload();
      } else {
        const data = await response.json();
        alert(data.error || 'C√≥ l·ªói x·∫£y ra khi th√™m nh√¢n vi√™n!');
      }
    });
   

    // X·ª≠ l√Ω submit form s·ª≠a
    document.getElementById('editEmployeeForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      const employeeId = document.getElementById('editEmployeeId').value;
      const name = document.getElementById('editName').value;
      const experience = document.getElementById('editExperience').value;
      const serviceId = document.getElementById('editServiceId').value;
      const imageFile = document.getElementById('editProfileImage').files[0];

      try {
        let imageUrl = document.getElementById('editImagePreview').src;
        
        // N·∫øu c√≥ ch·ªçn ·∫£nh m·ªõi
        if (imageFile) {
          const formData = new FormData();
          formData.append('image', imageFile);
          
          const uploadResponse = await fetch('/api/upload', {
            method: 'POST',
            body: formData
          });
          
          if (!uploadResponse.ok) {
            throw new Error('L·ªói khi t·∫£i ·∫£nh l√™n');
          }
          
          const uploadData = await uploadResponse.json();
          imageUrl = uploadData.imageUrl;
        }

        const response = await fetch(`/api/employees/${employeeId}`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            name,
            experience,
            Serviceid: serviceId,
            profile_image_url: imageUrl
          })
        });

        if (response.ok) {
          alert('C·∫≠p nh·∫≠t nh√¢n vi√™n th√†nh c√¥ng!');
          window.location.reload();
        } else {
          const data = await response.json();
          alert(data.error || 'C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t nh√¢n vi√™n!');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('C√≥ l·ªói x·∫£y ra!');
      }
    });

    // X·ª≠ l√Ω x√≥a nh√¢n vi√™n
    async function deleteEmployee(employeeId) {
      if (confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a nh√¢n vi√™n n√†y?')) {
        try {
          const response = await fetch(`/admin/employees/${employeeId}`, {
            method: 'DELETE'
          });

          if (response.ok) {
            alert('X√≥a nh√¢n vi√™n th√†nh c√¥ng!');
            window.location.reload();
          } else {
            const data = await response.json();
            alert(data.error || 'C√≥ l·ªói x·∫£y ra khi x√≥a nh√¢n vi√™n!');
          }
        } catch (error) {
          alert('C√≥ l·ªói x·∫£y ra!');
        }
      }
    }

    // Hi·ªÉn th·ªã preview ·∫£nh khi ch·ªçn file
    document.querySelector('input[name="profile_image"]').addEventListener('change', function(e) {
      const file = e.target.files[0];
      if (file) {
        if (file.size > 5 * 1024 * 1024) {
          alert('File ·∫£nh kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° 5MB');
          this.value = '';
          return;
        }

        const reader = new FileReader();
        reader.onload = function(e) {
          document.getElementById('addImagePreview').src = e.target.result;
          document.getElementById('addImagePreview').style.display = 'block';
        };
        reader.readAsDataURL(file);
      }
    });

    document.getElementById('editProfileImage').addEventListener('change', function(e) {
      const file = e.target.files[0];
      if (file) {
        if (file.size > 5 * 1024 * 1024) {
          alert('File ·∫£nh kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° 5MB');
          this.value = '';
          return;
        }

        const reader = new FileReader();
        reader.onload = function(e) {
          document.getElementById('editImagePreview').src = e.target.result;
        };
        reader.readAsDataURL(file);
      }
    });

    // T·ª± ƒë·ªông submit khi thay ƒë·ªïi gi√° tr·ªã
    document.getElementById('pageSize').addEventListener('change', function() {
      document.getElementById('pageSizeForm').submit();
    });
    // Ho·∫∑c submit khi nh·∫•n Enter
    document.getElementById('pageSize').addEventListener('keydown', function(e) {
      if (e.key === 'Enter') document.getElementById('pageSizeForm').submit();
    });

    (function() {
      function getToken() {
        const params = new URLSearchParams(window.location.search);
        return params.get('token');
      }
      let token = getToken();
      if (!token) {
        token = localStorage.getItem('token');
        if (token) {
          const params = new URLSearchParams(window.location.search);
          params.set('token', token);
          window.location.search = params.toString();
          return;
        } else {
          alert('B·∫°n ch∆∞a ƒëƒÉng nh·∫≠p ho·∫∑c phi√™n ƒëƒÉng nh·∫≠p ƒë√£ h·∫øt h·∫°n!');
          window.location.href = '/login';
          return;
        }
      }
      // S·ª≠a t·∫•t c·∫£ c√°c link trong sidebar ƒë·ªÉ gi·ªØ token
      document.querySelectorAll('.sidebar a').forEach(link => {
        if (link.href && link.href.startsWith(window.location.origin + '/admin/')) {
          const url = new URL(link.href);
          url.searchParams.set('token', token);
          link.href = url.pathname + url.search;
        }
      });
      // S·ª≠a t·∫•t c·∫£ c√°c link ph√¢n trang ƒë·ªÉ gi·ªØ token
      document.querySelectorAll('.pagination a').forEach(link => {
        const url = new URL(link.href, window.location.origin);
        url.searchParams.set('token', token);
        link.href = url.pathname + url.search;
      });
    })();
  </script>
</body>
</html>
