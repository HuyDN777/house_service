<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Qu·∫£n l√Ω D·ªãch v·ª•</title>
  <link rel="stylesheet" href="/css/admin/services_management.css" />
  <link href="https://fonts.googleapis.com/css2?family=Kodchasan:wght@300;400;700&display=swap" rel="stylesheet" />
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
  <style>
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0,0,0,0.5);
      justify-content: center;
      align-items: center;
    }
    .modal-content {
      background-color: white;
      padding: 20px;
      border-radius: 5px;
      width: 500px;
      max-height: 90vh;
      overflow-y: auto;
    }
    .form-group {
      margin-bottom: 15px;
    }
    .form-group label {
      display: block;
      margin-bottom: 5px;
    }
    .form-group input, .form-group textarea, .form-group select {
      width: 100%;
      padding: 8px;
      border: 1px solid #ddd;
      border-radius: 4px;
    }
    .btn-group {
      display: flex;
      justify-content: flex-end;
      gap: 10px;
      margin-top: 20px;
    }
  </style>
</head>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const btnAdd = document.querySelector(".btn-add");
    const modal = document.getElementById("addServiceForm");
    const imageInput = document.getElementById("serviceImage");
    const imagePreview = document.getElementById("imagePreview");
    const priceInput = document.getElementById("servicePrice");

    btnAdd.addEventListener("click", () => {
        modal.style.display = "flex";
    });

    window.closeForm = function () {
        modal.style.display = "none";
        document.getElementById("serviceForm").reset();
        imagePreview.style.display = "none";
    };

    // Hi·ªÉn th·ªã preview ·∫£nh
    imageInput.addEventListener("change", function (e) {
        const file = e.target.files[0];
        if (file) {
            if (file.size > 5 * 1024 * 1024) {
                alert("File ·∫£nh kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° 5MB");
                this.value = "";
                return;
            }

            const reader = new FileReader();
            reader.onload = function (e) {
                imagePreview.src = e.target.result;
                imagePreview.style.display = "block";
            };
            reader.readAsDataURL(file);
        }
    });

    // Ki·ªÉm tra gi√° tr·ªã gi√° d·ªãch v·ª•
    priceInput.addEventListener("input", function () {
        if (this.value < 0) {
            this.value = 0;
        }
    });

    // X·ª≠ l√Ω th√™m d·ªãch v·ª•
    const serviceForm = document.getElementById("serviceForm");
    serviceForm.addEventListener("submit", async function (event) {
        event.preventDefault();

        const formData = new FormData(serviceForm);
        const serviceImageFile = formData.get("serviceImage");

        try {
            // G·ªçi API upload ·∫£nh
            const imageUrl = await uploadServiceImage(serviceImageFile);

            // G·ª≠i th√¥ng tin d·ªãch v·ª• c√πng URL ·∫£nh
            const serviceData = {
                serviceName: formData.get("serviceName"),
                servicePrice: formData.get("servicePrice"),
                serviceUnit: formData.get("serviceUnit"),
                serviceDescription: formData.get("serviceDescription"),
                serviceCategory: formData.get("serviceCategory"),
                image_url: imageUrl, // URL ·∫£nh t·ª´ API upload
            };

            const response = await fetch("/admin/services/add", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(serviceData),
            });

            if (response.ok) {
                alert("Th√™m d·ªãch v·ª• th√†nh c√¥ng!");
                closeForm();
                location.reload(); // Reload l·∫°i trang
            } else {
                alert("L·ªói khi th√™m d·ªãch v·ª•");
            }
        } catch (error) {
            console.error("L·ªói:", error);
        }
    });

    // H√†m g·ªçi API upload ·∫£nh
    async function uploadServiceImage(file) {
        const formData = new FormData();
        formData.append("image", file);

        const response = await fetch("/api/upload", {
            method: "POST",
            body: formData,
        });

        if (!response.ok) {
            throw new Error("L·ªói khi t·∫£i ·∫£nh l√™n");
        }

        const data = await response.json();
        return data.imageUrl; // Tr·∫£ v·ªÅ URL ·∫£nh
    }
});
</script>

<body>
  <div class="sidebar">
        <h2>Admin Panel</h2>
        <ul>
            <li><a href="/admin/dashboard">üìä Dashboard</a></li>
            <li><a href="/admin/orders?page=1&pageSize=10">üìÖ Qu·∫£n l√Ω ƒë∆°n h√†ng</a></li>
            <li><a href="/admin/services?page=1&pageSize=10">üõ† Qu·∫£n l√Ω d·ªãch v·ª•</a></li>
            <li><a href="/admin/user?page=1&pageSize=10">üë• Qu·∫£n l√Ω ng∆∞·ªùi d√πng</a></li>
            <li><a href="/admin/categories?page=1&pageSize=10">üìÇ Qu·∫£n l√Ω danh m·ª•c</a></li>
            <li><a href="/admin/employees?page=1&pageSize=10">üë®‚Äçüîß Qu·∫£n l√Ω nh√¢n vi√™n</a></li>
            <li><a href="/admin/coupons?page=1&pageSize=10">üè∑ Qu·∫£n l√Ω m√£ khuy·∫øn m√£i</a></li>
            <li><a href="/admin/bills?page=1&pageSize=10">üíµ Qu·∫£n l√Ω h√≥a ƒë∆°n</a></li>
            <li><a href="/admin/feedback?page=1&pageSize=10">‚≠ê Qu·∫£n l√Ω ƒë√°nh gi√°</a></li>
            <li>
                <form action="/logout" method="POST" style="margin: 0;">
                <button type="submit" class="logout-btn">
                    <i class="fas fa-sign-out-alt"></i> ƒêƒÉng xu·∫•t
                </button>
                </form>
            </li>
        </ul>
    </div>

  <div class="container">
    <h1>Qu·∫£n l√Ω d·ªãch v·ª•</h1>
    <form method="get" style="display:inline;" id="pageSizeForm">
        <input type="hidden" name="page" value="<%= page %>">
        <input type="hidden" name="token" value="<%= token %>">
        <label for="pageSize">S·ªë d√≤ng/trang:</label>
        <input type="number" name="pageSize" id="pageSize" min="1" max="100" value="<%= pageSize %>" style="width:60px;">
    </form>
    <table>
        <tr>
            <th>ID D·ªãch V·ª•</th>
            <th>T√™n D·ªãch V·ª•</th>
            <th>Gi√°</th>
            <th>ƒê∆°n v·ªã t√≠nh</th>
            <th>M√¥ T·∫£</th>
            <th>Danh M·ª•c</th>
            <th>URL ·∫¢nh</th>
            <th>H√†nh ƒê·ªông</th>
        </tr>
        <% services.forEach(service => { %>
          <tr>
            <td><%= service.id %></td>
            <td><%= service.name %></td>
            <td><%= service.price %> VNƒê</td>
            <td><%= service.unit %></td>
            <td><%= service.description %></td>
            <td><%= service.category %></td>
            <td><a href="<%= service.image_url %>" target="_blank" style="text-decoration: none;">Xem ·∫£nh</a></td>
            <td>
                <button class="btn btn-edit" onclick="editService('<%= service.id %>', '<%= service.name %>', '<%= service.price %>', '<%= service.unit %>', '<%= service.description %>', '<%= service.Categoryid %>', '<%= service.image_url %>')">S·ª≠a</button>
                <button class="btn btn-delete" onclick="deleteService('<%= service.id %>')">X√≥a</button>
            </td>
          </tr>
        <% }) %> 
    </table>

    <button class="btn-add" onclick="openAddModal()">Th√™m d·ªãch v·ª•</button>

    <!-- Form th√™m d·ªãch v·ª• -->
    <div id="addServiceForm" class="modal">
      <div class="modal-content">
        <h2>Th√™m D·ªãch V·ª• M·ªõi</h2>
        <form id="serviceForm" action="/admin/services/add" method="POST" enctype="multipart/form-data">
          <div class="form-group">
            <label for="serviceName">T√™n d·ªãch v·ª•:</label>
            <input type="text" id="serviceName" name="serviceName" required 
                   placeholder="Nh·∫≠p t√™n d·ªãch v·ª•">
          </div>

          <div class="form-group">
            <label for="servicePrice">Gi√° (VNƒê):</label>
            <input type="number" id="servicePrice" name="servicePrice" required 
                   min="0" placeholder="Nh·∫≠p gi√° d·ªãch v·ª•">
          </div>

          <div class="form-group">
            <label for="serviceUnit">ƒê∆°n v·ªã t√≠nh:</label>
            <input type="text" id="serviceUnit" name="serviceUnit" required 
                   placeholder="V√≠ d·ª•: l·∫ßn, gi·ªù, m2, ...">
          </div>

          <div class="form-group">
            <label for="serviceDescription">M√¥ t·∫£:</label>
            <textarea id="serviceDescription" name="serviceDescription" required 
                      placeholder="Nh·∫≠p m√¥ t·∫£ chi ti·∫øt v·ªÅ d·ªãch v·ª•"></textarea>
          </div>

          <div class="form-group">
            <label for="serviceCategory">Danh m·ª•c:</label>
            <select id="serviceCategory" name="serviceCategory" required>
              <option value="">--Ch·ªçn danh m·ª•c--</option>
              <% categories.forEach(category => { %>
                <option value="<%= category.id %>"><%= category.name %></option>
              <% }) %>
            </select>
          </div>

          <div class="form-group">
            <label for="serviceImage">·∫¢nh d·ªãch v·ª• (t·ªëi ƒëa 5MB):</label>
            <input type="file" id="serviceImage" name="serviceImage" 
                   accept="image/*" required>
            <img id="imagePreview" style="display: none; max-width: 200px; margin-top: 10px;">
          </div>

          <div class="btn-group">
            <button type="submit" class="btn">L∆∞u</button>
            <button type="button" class="btn btn-cancel" onclick="closeModal('addServiceForm')">H·ªßy</button>
          </div>
        </form>
      </div>
    </div>

    <!-- Form s·ª≠a d·ªãch v·ª• -->
    <div id="editServiceForm" class="modal">
      <div class="modal-content">
        <h2>S·ª≠a D·ªãch V·ª•</h2>
        <form id="editForm">
          <input type="hidden" id="editServiceId">
          <div class="form-group">
            <label for="editServiceName">T√™n d·ªãch v·ª•:</label>
            <input type="text" id="editServiceName" required>
          </div>

          <div class="form-group">
            <label for="editServicePrice">Gi√° (VNƒê):</label>
            <input type="number" id="editServicePrice" required min="0">
          </div>

          <div class="form-group">
            <label for="editServiceUnit">ƒê∆°n v·ªã t√≠nh:</label>
            <input type="text" id="editServiceUnit" required>
          </div>

          <div class="form-group">
            <label for="editServiceDescription">M√¥ t·∫£:</label>
            <textarea id="editServiceDescription" required></textarea>
          </div>

          <div class="form-group">
            <label for="editServiceCategory">Danh m·ª•c:</label>
            <select id="editServiceCategory" required>
              <option value="">--Ch·ªçn danh m·ª•c--</option>
              <% categories.forEach(category => { %>
                <option value="<%= category.id %>"><%= category.name %></option>
              <% }) %>
            </select>
          </div>

          <div class="form-group">
            <label for="editServiceImage">·∫¢nh d·ªãch v·ª• (t·ªëi ƒëa 5MB):</label>
            <input type="file" id="editServiceImage" accept="image/*">
            <img id="editImagePreview" style="max-width: 200px; margin-top: 10px;">
          </div>

          <div class="btn-group">
            <button type="submit" class="btn">L∆∞u</button>
            <button type="button" class="btn btn-cancel" onclick="closeModal('editServiceForm')">H·ªßy</button>
          </div>
        </form>
      </div>
    </div>

    <div class="pagination">
        <% if (page > 1) { %>
            <a href="?page=<%= page - 1 %>&pageSize=<%= pageSize %>&token=<%= token %>" style="text-decoration: none;">Trang tr∆∞·ªõc</a>
        <% } %>
        <span>Trang <%= page %> / <%= totalPages %></span>
        <% if (page < totalPages) { %>
            <a href="?page=<%= page + 1 %>&pageSize=<%= pageSize %>&token=<%= token %>" style="text-decoration: none;">Trang sau</a>
        <% } %>
    </div>
  </div>

  <script>
    // M·ªü modal th√™m m·ªõi
    function openAddModal() {
      document.getElementById('addServiceForm').style.display = 'flex';
    }

    // ƒê√≥ng modal
    function closeModal(modalId) {
      document.getElementById(modalId).style.display = 'none';
      if (modalId === 'addServiceForm') {
        document.getElementById('serviceForm').reset();
        document.getElementById('imagePreview').style.display = 'none';
      }
    }

    // M·ªü modal s·ª≠a
    function editService(id, name, price, unit, description, categoryId, imageUrl) {
      document.getElementById('editServiceId').value = id;
      document.getElementById('editServiceName').value = name;
      document.getElementById('editServicePrice').value = price;
      document.getElementById('editServiceUnit').value = unit;
      document.getElementById('editServiceDescription').value = description;
      document.getElementById('editServiceCategory').value = categoryId;
      document.getElementById('editImagePreview').src = imageUrl;
      document.getElementById('editServiceForm').style.display = 'flex';
    }

    // X·ª≠ l√Ω submit form s·ª≠a
    document.getElementById('editForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      const serviceId = document.getElementById('editServiceId').value;
      const name = document.getElementById('editServiceName').value;
      const price = document.getElementById('editServicePrice').value;
      const unit = document.getElementById('editServiceUnit').value;
      const description = document.getElementById('editServiceDescription').value;
      const categoryId = document.getElementById('editServiceCategory').value;
      const imageFile = document.getElementById('editServiceImage').files[0];

      try {
        let imageUrl = document.getElementById('editImagePreview').src;
        
        // N·∫øu c√≥ ch·ªçn ·∫£nh m·ªõi
        if (imageFile) {
          const formData = new FormData();
          formData.append('image', imageFile);
          
          const uploadResponse = await fetch('/api/upload', {
            method: 'POST',
            body: formData
          });
          
          if (!uploadResponse.ok) {
            throw new Error('L·ªói khi t·∫£i ·∫£nh l√™n');
          }
          
          const uploadData = await uploadResponse.json();
          imageUrl = uploadData.imageUrl;
        }

        const response = await fetch(`/admin/services/${serviceId}`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            name,
            price,
            unit,
            description,
            Categoryid: categoryId,
            image_url: imageUrl
          })
        });

        if (response.ok) {
          alert('C·∫≠p nh·∫≠t d·ªãch v·ª• th√†nh c√¥ng!');
          window.location.reload();
        } else {
          const data = await response.json();
          alert(data.error || 'C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t d·ªãch v·ª•!');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('C√≥ l·ªói x·∫£y ra!');
      }
    });

    // X·ª≠ l√Ω x√≥a d·ªãch v·ª•
    async function deleteService(serviceId) {
      if (confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a d·ªãch v·ª• n√†y?')) {
        try {
          const response = await fetch(`/admin/services/${serviceId}`, {
            method: 'DELETE'
          });

          if (response.ok) {
            alert('X√≥a d·ªãch v·ª• th√†nh c√¥ng!');
            window.location.reload();
          } else {
            const data = await response.json();
            alert(data.error || 'C√≥ l·ªói x·∫£y ra khi x√≥a d·ªãch v·ª•!');
          }
        } catch (error) {
          console.error('Error:', error);
          alert('C√≥ l·ªói x·∫£y ra!');
        }
      }
    }

    // Hi·ªÉn th·ªã preview ·∫£nh khi ch·ªçn file
    document.getElementById('serviceImage').addEventListener('change', function(e) {
      const file = e.target.files[0];
      if (file) {
        if (file.size > 5 * 1024 * 1024) {
          alert('File ·∫£nh kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° 5MB');
          this.value = '';
          return;
        }

        const reader = new FileReader();
        reader.onload = function(e) {
          document.getElementById('imagePreview').src = e.target.result;
          document.getElementById('imagePreview').style.display = 'block';
        };
        reader.readAsDataURL(file);
      }
    });

    document.getElementById('editServiceImage').addEventListener('change', function(e) {
      const file = e.target.files[0];
      if (file) {
        if (file.size > 5 * 1024 * 1024) {
          alert('File ·∫£nh kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° 5MB');
          this.value = '';
          return;
        }

        const reader = new FileReader();
        reader.onload = function(e) {
          document.getElementById('editImagePreview').src = e.target.result;
        };
        reader.readAsDataURL(file);
      }
    });

    // T·ª± ƒë·ªông submit khi thay ƒë·ªïi gi√° tr·ªã
    document.getElementById('pageSize').addEventListener('change', function() {
        document.getElementById('pageSizeForm').submit();
    });
    // Ho·∫∑c submit khi nh·∫•n Enter
    document.getElementById('pageSize').addEventListener('keydown', function(e) {
        if (e.key === 'Enter') document.getElementById('pageSizeForm').submit();
    });

    (function() {
      function getToken() {
        const params = new URLSearchParams(window.location.search);
        return params.get('token');
      }
      let token = getToken();
      if (!token) {
        token = localStorage.getItem('token');
        if (token) {
          const params = new URLSearchParams(window.location.search);
          params.set('token', token);
          window.location.search = params.toString();
          return;
        } else {
          alert('B·∫°n ch∆∞a ƒëƒÉng nh·∫≠p ho·∫∑c phi√™n ƒëƒÉng nh·∫≠p ƒë√£ h·∫øt h·∫°n!');
          window.location.href = '/login';
          return;
        }
      }
      // S·ª≠a t·∫•t c·∫£ c√°c link trong sidebar ƒë·ªÉ gi·ªØ token
      document.querySelectorAll('.sidebar a').forEach(link => {
        if (link.href && link.href.startsWith(window.location.origin + '/admin/')) {
          const url = new URL(link.href);
          url.searchParams.set('token', token);
          link.href = url.pathname + url.search;
        }
      });
      // S·ª≠a t·∫•t c·∫£ c√°c link ph√¢n trang ƒë·ªÉ gi·ªØ token
      document.querySelectorAll('.pagination a').forEach(link => {
        const url = new URL(link.href, window.location.origin);
        url.searchParams.set('token', token);
        link.href = url.pathname + url.search;
      });
    })();
  </script>
</body>
</html>
